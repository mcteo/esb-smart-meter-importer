[project]
name = "esb-smart-meter-importer"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [
  { name = "Thomas Dunne", email = "thomasdunne999@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]

[tool.poetry]
name = "esb-smart-meter-importer"
version = "0.1.0"
description = "A small utility to extract power comsumption data from Ireland's national electrical grid provider."
authors = ["Thomas Dunne <thomasdunne999@gmail.com>"]
readme = "README.md"
packages = [{include = "esb_smart_meter_importer", from = "src"}]

[tool.poetry.dependencies]
python = "^3.7"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.2"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
requests-mock = "^1.11.0"
pytest-cov = "^4.1.0"

[tool.poetry.group.lint.dependencies]
black = "^23.11.0"
mypy = "^1.7.0"
ruff = "^0.1.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["esb_smart_meter_importer"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.coverage.run]
source_pkgs = ["esb_smart_meter_importer", "tests"]
branch = true
omit = []

[tool.coverage.paths]
esb_smart_meter_importer = ["src/esb_smart_meter_importer"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
